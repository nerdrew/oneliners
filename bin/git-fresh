#!/bin/bash

set -eu -o pipefail

usage() {
  echo "Usage: git fresh [<branch-to-rebase-on>]   (default branch=origin/master)"
}

if [ $# -eq 1 ]; then
  if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    usage
    exit
  fi
  target=$1
elif [ $# -eq 0 ]; then
  target=origin/master
else
  usage
  exit 1
fi

if [[ "$target" == */* ]]; then
  git fetch --prune "${target%%/*}"
else
  git fetch --prune
fi

current=$(git rev-parse --abbrev-ref HEAD)
purge_keep_branches=(${GIT_PURGE_KEEP_BRANCHES:-})
keep_branches="$(printf "|%s" "${purge_keep_branches[@]}")"
# #| removes the leading |
if grep -qE "${keep_branches#|}" <<< "$current" ; then
  echo "Skipping rebase of $current since it is blacklisted in GIT_PURGE_KEEP_BRANCHES=$GIT_PURGE_KEEP_BRANCHES"
  exit 1
fi

if ! git diff --quiet "$(git merge-base HEAD "${target}")..${target}"; then
  if ! git diff --quiet; then
    stashed=1
    git stash
  fi
  git rebase "${target}"
  if [ -n "${stashed:-}" ]; then
    git stash pop
  fi
fi
git-purge-merged-branches "${target}" || echo "Failed to delete some merged branches, continuing."
