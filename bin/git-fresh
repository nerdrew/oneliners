#!/bin/bash

set -eu -o pipefail

usage() {
    echo "Usage: $0 [<branch-to-rebase-on>]   (default branch=origin/master)"
    exit
}

if [ "$#" -eq 1 ]; then
  if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    usage
  else
    target="$1"
  fi
elif [ "$#" -eq 0 ]; then
  target=origin/master
else
  usage
fi

if [[ "$target" == */* ]]; then
  git fetch --prune ${target%%/*}
else
  git fetch --prune
fi

current=$(git rev-parse --abbrev-ref HEAD)
for branch in $(echo "$GIT_PURGE_KEEP_BRANCHES"); do
  if echo "$current" | egrep -q "$branch"; then
    echo "Skipping rebase of $current since it is blacklisted in GIT_PURGE_KEEP_BRANCHES=$GIT_PURGE_KEEP_BRANCHES"
    exit 1
  fi
done

if ! git diff --quiet $(git merge-base HEAD ${target})..${target}; then
  if ! git diff --quiet; then
    stashed=1
    git stash
  fi
  git rebase ${target}
  if [ -n "${stashed:-}" ]; then
    git stash pop
  fi
fi
git-purge-merged-branches ${target} || echo "Failed to delete some merged branches, continuing."
