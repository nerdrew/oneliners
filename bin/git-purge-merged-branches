#!/usr/bin/env bash

set -e

usage() {
    echo "Usage: $0 [--remote]"
    exit
}

git remote prune origin

keep_branches="$GIT_PURGE_KEEP_BRANCHES master$"

# Remove local fully merged branches
merged_local=$(git branch --merged origin/master | grep -v '^\*' || true)
for branch in $(echo "$keep_branches"); do
  merged_local=$(echo "$merged_local" | egrep -v "$branch" || true)
done

if [ -n "$merged_local" ]; then
  echo "The following local branches are fully merged and will be removed:"
  echo "$merged_local"
  git branch -d $merged_local
fi

if [ "$#" -eq 1 ]; then
  if [ "$1" != "--remote" ]; then
    usage
  fi
elif [ "$#" -gt 1 ]; then
  usage
elif [ "$#" -eq 0 ]; then
  exit
fi

# Show remote fully merged branches
merged_remote=$(git branch -r --merged origin/master | sed 's/ *origin\///')
for branch in $(echo "$keep_branches"); do
  merged_remote=$(echo "$merged_remote" | egrep -v "$branch" || true)
done

if [ -n "$merged_remote" ]; then
  echo "The following remote branches are fully merged and will be removed:"
  echo "$merged_remote"

  read -p "Continue (y/n)? " CLEAN_REMOTE_BRANCHES
  if [ "$CLEAN_REMOTE_BRANCHES" == "y" ]; then
    echo "$merged_remote" | xargs -I% git push origin :%
  fi
fi
